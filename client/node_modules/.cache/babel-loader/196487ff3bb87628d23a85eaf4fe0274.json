{"ast":null,"code":"import React, { useState } from \"react\"; // Firebase App (the core Firebase SDK) is always required and must be listed first\n\nimport firebase from \"firebase/app\"; // Add the Firebase products that you want to use\n\nimport \"firebase/storage\";\nimport \"firebase/firestore\"; // Define database config\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAgTY6i0_P4d6lKuT-6D5tJQRK3T4mQ1sU\",\n  authDomain: \"lexical-acolyte-304913.firebaseapp.com\",\n  projectId: \"lexical-acolyte-304913\",\n  storageBucket: \"lexical-acolyte-304913.appspot.com\",\n  messagingSenderId: \"611796077490\",\n  appId: \"1:611796077490:web:d8931e7d286835527572ab\"\n}; // Initialize Firebase\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n} else {\n  firebase.app(); // if already initialized, use that one\n} // Get a reference to the storage service, which is used to create references in your storage bucket\n\n\nvar storage = firebase.storage(); // Get a reference to the storage service, which is used to create references in your storage bucket\n\nvar firestore = firebase.firestore();\n\nfunction FirebaseNetWorth() {\n  const [netWorth, setNetWorth] = useState('');\n  const snapshot = firestore.collection('ticketreader/').get();\n  snapshot.then(snap => {\n    snap.forEach(doc => {\n      //console.log(doc.id, '=>', doc.data())\n      //netWorth = doc.data().netValue\n      setNetWorth(doc.data().netValue);\n      console.log(\"Net Worth: \" + netWorth);\n    });\n  });\n  return netWorth;\n}\n\nexport default FirebaseNetWorth;","map":{"version":3,"sources":["/Users/JuanCarlos/react-file-uploader/client/src/data/FirebaseNetWorth.js"],"names":["React","useState","firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","apps","length","initializeApp","app","storage","firestore","FirebaseNetWorth","netWorth","setNetWorth","snapshot","collection","get","then","snap","forEach","doc","data","netValue","console","log"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,QAAP,MAAqB,cAArB,C,CAEA;;AACA,OAAO,kBAAP;AACA,OAAO,oBAAP,C,CAEA;;AACA,IAAIC,cAAc,GAAG;AACjBC,EAAAA,MAAM,EAAE,yCADS;AAEjBC,EAAAA,UAAU,EAAE,wCAFK;AAGjBC,EAAAA,SAAS,EAAE,wBAHM;AAIjBC,EAAAA,aAAa,EAAE,oCAJE;AAKjBC,EAAAA,iBAAiB,EAAE,cALF;AAMjBC,EAAAA,KAAK,EAAE;AANU,CAArB,C,CAQA;;AACA,IAAI,CAACP,QAAQ,CAACQ,IAAT,CAAcC,MAAnB,EAA2B;AACvBT,EAAAA,QAAQ,CAACU,aAAT,CAAuBT,cAAvB;AACH,CAFD,MAEO;AACHD,EAAAA,QAAQ,CAACW,GAAT,GADG,CACa;AACnB,C,CAED;;;AACA,IAAIC,OAAO,GAAGZ,QAAQ,CAACY,OAAT,EAAd,C,CAEA;;AACA,IAAIC,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAhB;;AAEA,SAASC,gBAAT,GAA4B;AAExB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AAGA,QAAMkB,QAAQ,GAAGJ,SAAS,CAACK,UAAV,CAAqB,eAArB,EAAsCC,GAAtC,EAAjB;AACAF,EAAAA,QAAQ,CAACG,IAAT,CAAcC,IAAI,IAAI;AAClBA,IAAAA,IAAI,CAACC,OAAL,CAAaC,GAAG,IAAI;AAChB;AACA;AACAP,MAAAA,WAAW,CAACO,GAAG,CAACC,IAAJ,GAAWC,QAAZ,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBZ,QAA5B;AACH,KALD;AAMH,GAPD;AASA,SAAOA,QAAP;AAEH;;AAED,eAAeD,gBAAf","sourcesContent":["import React, { useState } from \"react\";\n// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport firebase from \"firebase/app\";\n\n// Add the Firebase products that you want to use\nimport \"firebase/storage\";\nimport \"firebase/firestore\";\n\n// Define database config\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAgTY6i0_P4d6lKuT-6D5tJQRK3T4mQ1sU\",\n    authDomain: \"lexical-acolyte-304913.firebaseapp.com\",\n    projectId: \"lexical-acolyte-304913\",\n    storageBucket: \"lexical-acolyte-304913.appspot.com\",\n    messagingSenderId: \"611796077490\",\n    appId: \"1:611796077490:web:d8931e7d286835527572ab\"\n};\n// Initialize Firebase\nif (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n} else {\n    firebase.app(); // if already initialized, use that one\n}\n\n// Get a reference to the storage service, which is used to create references in your storage bucket\nvar storage = firebase.storage();\n\n// Get a reference to the storage service, which is used to create references in your storage bucket\nvar firestore = firebase.firestore();\n\nfunction FirebaseNetWorth() {\n\n    const [netWorth, setNetWorth] = useState('');\n\n\n    const snapshot = firestore.collection('ticketreader/').get();\n    snapshot.then(snap => {\n        snap.forEach(doc => {\n            //console.log(doc.id, '=>', doc.data())\n            //netWorth = doc.data().netValue\n            setNetWorth(doc.data().netValue)\n            console.log(\"Net Worth: \" + netWorth)\n        })\n    })\n\n    return netWorth;\n\n}\n\nexport default FirebaseNetWorth;"]},"metadata":{},"sourceType":"module"}