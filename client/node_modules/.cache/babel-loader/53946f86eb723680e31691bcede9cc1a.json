{"ast":null,"code":"// import React, { useState } from \"react\";\n// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport firebase from \"firebase/app\"; // Add the Firebase products that you want to use\n\nimport \"firebase/storage\";\nimport \"firebase/firestore\"; // Define database config\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAgTY6i0_P4d6lKuT-6D5tJQRK3T4mQ1sU\",\n  authDomain: \"lexical-acolyte-304913.firebaseapp.com\",\n  projectId: \"lexical-acolyte-304913\",\n  storageBucket: \"lexical-acolyte-304913.appspot.com\",\n  messagingSenderId: \"611796077490\",\n  appId: \"1:611796077490:web:d8931e7d286835527572ab\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig); // Get a reference to the storage service, which is used to create references in your storage bucket\n\nvar storage = firebase.storage(); // Get a reference to the storage service, which is used to create references in your storage bucket\n\nvar firestore = firebase.firestore(); // Get all of  my ticket data\n// const [allTickets, setAllTickets] = useState([]);\n\nconst tickets = [];\nfirestore.ref(\"ticketreader\").doc(\"ticketreader/tickets\").then(snapshot => {\n  snapshot.docs.forEach(ticket => {\n    let currentID = ticket.id;\n    console.log(\"Id: \" + currentID);\n    let appObj = { ...ticket.data(),\n      ['id']: currentID\n    };\n    tickets.push(appObj);\n    tickets.push(ticket.data());\n  });\n}); // var netWorth = \"data\";\n// firestore.doc(\"ticketreader/netValue\").get()\n//     .then(snapshot => {\n//         console.log(\"Snapshot: \" + snapshot.id.toString())\n//         netWorth = snapshot;\n//     });\n\nexport default tickets; // export default netWorth;","map":{"version":3,"sources":["/Users/JuanCarlos/react-file-uploader/client/src/data/firebaseTransactions.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeApp","storage","firestore","tickets","ref","doc","then","snapshot","docs","forEach","ticket","currentID","id","console","log","appObj","data","push"],"mappings":"AAAA;AACA;AACA,OAAOA,QAAP,MAAqB,cAArB,C,CAEA;;AACA,OAAO,kBAAP;AACA,OAAO,oBAAP,C,CAEA;;AACA,IAAIC,cAAc,GAAG;AACjBC,EAAAA,MAAM,EAAE,yCADS;AAEjBC,EAAAA,UAAU,EAAE,wCAFK;AAGjBC,EAAAA,SAAS,EAAE,wBAHM;AAIjBC,EAAAA,aAAa,EAAE,oCAJE;AAKjBC,EAAAA,iBAAiB,EAAE,cALF;AAMjBC,EAAAA,KAAK,EAAE;AANU,CAArB,C,CAQA;;AACAP,QAAQ,CAACQ,aAAT,CAAuBP,cAAvB,E,CAEA;;AACA,IAAIQ,OAAO,GAAGT,QAAQ,CAACS,OAAT,EAAd,C,CAEA;;AACA,IAAIC,SAAS,GAAGV,QAAQ,CAACU,SAAT,EAAhB,C,CAEA;AACA;;AAEA,MAAMC,OAAO,GAAG,EAAhB;AAEAD,SAAS,CAACE,GAAV,CAAc,cAAd,EAA8BC,GAA9B,CAAkC,sBAAlC,EACKC,IADL,CACUC,QAAQ,IAAI;AACdA,EAAAA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBC,MAAM,IAAI;AAC5B,QAAIC,SAAS,GAAGD,MAAM,CAACE,EAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAASH,SAArB;AAEA,QAAII,MAAM,GAAG,EAAE,GAAGL,MAAM,CAACM,IAAP,EAAL;AAAoB,OAAC,IAAD,GAAQL;AAA5B,KAAb;AAEAR,IAAAA,OAAO,CAACc,IAAR,CAAaF,MAAb;AACAZ,IAAAA,OAAO,CAACc,IAAR,CAAaP,MAAM,CAACM,IAAP,EAAb;AACH,GARD;AASH,CAXL,E,CAYA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeb,OAAf,C,CACA","sourcesContent":["// import React, { useState } from \"react\";\n// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport firebase from \"firebase/app\";\n\n// Add the Firebase products that you want to use\nimport \"firebase/storage\";\nimport \"firebase/firestore\";\n\n// Define database config\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAgTY6i0_P4d6lKuT-6D5tJQRK3T4mQ1sU\",\n    authDomain: \"lexical-acolyte-304913.firebaseapp.com\",\n    projectId: \"lexical-acolyte-304913\",\n    storageBucket: \"lexical-acolyte-304913.appspot.com\",\n    messagingSenderId: \"611796077490\",\n    appId: \"1:611796077490:web:d8931e7d286835527572ab\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n// Get a reference to the storage service, which is used to create references in your storage bucket\nvar storage = firebase.storage();\n\n// Get a reference to the storage service, which is used to create references in your storage bucket\nvar firestore = firebase.firestore();\n\n// Get all of  my ticket data\n// const [allTickets, setAllTickets] = useState([]);\n\nconst tickets = [];\n\nfirestore.ref(\"ticketreader\").doc(\"ticketreader/tickets\")\n    .then(snapshot => {\n        snapshot.docs.forEach(ticket => {\n            let currentID = ticket.id;\n            console.log(\"Id: \" + currentID);\n\n            let appObj = { ...ticket.data(), ['id']: currentID }\n\n            tickets.push(appObj);\n            tickets.push(ticket.data());\n        })\n    });\n// var netWorth = \"data\";\n// firestore.doc(\"ticketreader/netValue\").get()\n//     .then(snapshot => {\n//         console.log(\"Snapshot: \" + snapshot.id.toString())\n//         netWorth = snapshot;\n//     });\n\n\nexport default tickets;\n// export default netWorth;"]},"metadata":{},"sourceType":"module"}